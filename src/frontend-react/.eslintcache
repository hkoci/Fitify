[{"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\index.jsx":"1","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\pages\\Activities.jsx":"2","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\pages\\Dashboard.jsx":"3","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\pages\\Register.jsx":"4","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\pages\\Login.jsx":"5","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\pages\\Weight.jsx":"6","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\pages\\Sleep.jsx":"7","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\pages\\Settings.jsx":"8","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\static\\Landing page\\landingPage.jsx":"9","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\static\\Review page\\review.jsx":"10","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\static\\Home page\\home.jsx":"11","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\services\\login\\authentication.jsx":"12","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\static\\Help page\\help.jsx":"13","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\register\\StepForm.js":"14","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\Navbar.jsx":"15","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\FirstTimeSetup.jsx":"16","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\activities\\ActivitiesView.jsx":"17","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\services\\settings\\ThemeSettings.jsx":"18","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\constants\\constant.jsx":"19","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\dashboard\\DashboardView.jsx":"20","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\sleep\\SleepView.jsx":"21","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\weight\\WeightView.jsx":"22","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\settings\\SettingsView.jsx":"23","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\register\\Step2-Marketing.js":"24","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\register\\Step1-UserInfo.js":"25","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\register\\StepFinal-Information.js":"26","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\register\\Step3-Notifications.js":"27","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\register\\Step4-Appearance.js":"28","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\register\\formValidation.js":"29","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\weight\\actionButton\\weightInput.jsx":"30","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\settings\\preferences\\SettingsPersonal.jsx":"31","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\settings\\preferences\\SettingsNotifications.jsx":"32","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\settings\\preferences\\SettingsMarketing.jsx":"33","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\settings\\preferences\\SettingsAppearance.jsx":"34","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\weight\\visualisation\\WeightChart.jsx":"35","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\weight\\visualisation\\WeightTable.jsx":"36","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\sleep\\visualisation\\SleepChart.jsx":"37","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\sleep\\actionButton\\SleepInput.jsx":"38","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\sleep\\visualisation\\SleepTable.jsx":"39","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\activities\\visualisation\\ActivitiesTable.jsx":"40","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\services\\register\\userCreation.jsx":"41","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\services\\settings\\MarketingSettings.jsx":"42","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\services\\activities\\weightGet.jsx":"43","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\services\\activities\\activitiesGet.jsx":"44","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\services\\activities\\sleepGet.jsx":"45","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\services\\activities\\sleepStore.jsx":"46","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\services\\activities\\weightStore.jsx":"47","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\pages\\WaterIntake.jsx":"48","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\water\\WaterIntakeView.jsx":"49","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\services\\activities\\waterIntakeGet.jsx":"50","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\services\\activities\\waterIntakeStore.jsx":"51"},{"size":2724,"mtime":1615163546824,"results":"52","hashOfConfig":"53"},{"size":2080,"mtime":1615138893043,"results":"54","hashOfConfig":"53"},{"size":2181,"mtime":1615138893043,"results":"55","hashOfConfig":"53"},{"size":1945,"mtime":1615138893045,"results":"56","hashOfConfig":"53"},{"size":8581,"mtime":1615138893045,"results":"57","hashOfConfig":"53"},{"size":2051,"mtime":1615138893046,"results":"58","hashOfConfig":"53"},{"size":2069,"mtime":1615138893046,"results":"59","hashOfConfig":"53"},{"size":2137,"mtime":1615138893045,"results":"60","hashOfConfig":"53"},{"size":1455,"mtime":1615138893144,"results":"61","hashOfConfig":"53"},{"size":2413,"mtime":1615138893159,"results":"62","hashOfConfig":"53"},{"size":2851,"mtime":1615138893142,"results":"63","hashOfConfig":"53"},{"size":7329,"mtime":1615167699641,"results":"64","hashOfConfig":"53"},{"size":2440,"mtime":1615138893098,"results":"65","hashOfConfig":"53"},{"size":5194,"mtime":1615138893034,"results":"66","hashOfConfig":"53"},{"size":10969,"mtime":1615167390208,"results":"67","hashOfConfig":"53"},{"size":2576,"mtime":1615138893030,"results":"68","hashOfConfig":"53"},{"size":756,"mtime":1615138893031,"results":"69","hashOfConfig":"53"},{"size":9411,"mtime":1615167669103,"results":"70","hashOfConfig":"53"},{"size":755,"mtime":1615138893040,"results":"71","hashOfConfig":"53"},{"size":1159,"mtime":1615138893032,"results":"72","hashOfConfig":"53"},{"size":931,"mtime":1615138893037,"results":"73","hashOfConfig":"53"},{"size":935,"mtime":1615138893038,"results":"74","hashOfConfig":"53"},{"size":1447,"mtime":1615138893035,"results":"75","hashOfConfig":"53"},{"size":3677,"mtime":1615138893033,"results":"76","hashOfConfig":"53"},{"size":5563,"mtime":1615138893032,"results":"77","hashOfConfig":"53"},{"size":8781,"mtime":1615138893033,"results":"78","hashOfConfig":"53"},{"size":3451,"mtime":1615138893033,"results":"79","hashOfConfig":"53"},{"size":3491,"mtime":1615138893033,"results":"80","hashOfConfig":"53"},{"size":1176,"mtime":1615138893034,"results":"81","hashOfConfig":"53"},{"size":8824,"mtime":1615138893039,"results":"82","hashOfConfig":"53"},{"size":2492,"mtime":1615155599334,"results":"83","hashOfConfig":"53"},{"size":5139,"mtime":1615138893036,"results":"84","hashOfConfig":"53"},{"size":5629,"mtime":1615155966384,"results":"85","hashOfConfig":"53"},{"size":6698,"mtime":1615156305873,"results":"86","hashOfConfig":"53"},{"size":1690,"mtime":1615138893039,"results":"87","hashOfConfig":"53"},{"size":1943,"mtime":1615138893039,"results":"88","hashOfConfig":"53"},{"size":1718,"mtime":1615138893038,"results":"89","hashOfConfig":"53"},{"size":13469,"mtime":1615138893037,"results":"90","hashOfConfig":"53"},{"size":1935,"mtime":1615138893038,"results":"91","hashOfConfig":"53"},{"size":1809,"mtime":1615138893031,"results":"92","hashOfConfig":"53"},{"size":18875,"mtime":1615138893049,"results":"93","hashOfConfig":"53"},{"size":6207,"mtime":1615138893049,"results":"94","hashOfConfig":"53"},{"size":4075,"mtime":1615158765120,"results":"95","hashOfConfig":"53"},{"size":1929,"mtime":1615138893046,"results":"96","hashOfConfig":"53"},{"size":4048,"mtime":1615138893047,"results":"97","hashOfConfig":"53"},{"size":3479,"mtime":1615138893047,"results":"98","hashOfConfig":"53"},{"size":3360,"mtime":1615138893048,"results":"99","hashOfConfig":"53"},{"size":2058,"mtime":1615167148653,"results":"100","hashOfConfig":"53"},{"size":0,"mtime":1615231328584,"results":"101","hashOfConfig":"53"},{"size":4241,"mtime":1615166365868,"results":"102","hashOfConfig":"53"},{"size":3338,"mtime":1615165823427,"results":"103","hashOfConfig":"53"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"yyqki9",{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"109","messages":"110","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"111","messages":"112","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"117","messages":"118","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"119","messages":"120","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"121","messages":"122","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"123","usedDeprecatedRules":"108"},{"filePath":"124","messages":"125","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"126","usedDeprecatedRules":"108"},{"filePath":"127","messages":"128","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"129","usedDeprecatedRules":"108"},{"filePath":"130","messages":"131","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"132","messages":"133","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"134","usedDeprecatedRules":"108"},{"filePath":"135","messages":"136","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"137","messages":"138","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"139","messages":"140","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"141","messages":"142","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"143","messages":"144","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"145","messages":"146","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"147","messages":"148","errorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"149","usedDeprecatedRules":"108"},{"filePath":"150","messages":"151","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"152","messages":"153","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"154","messages":"155","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"156","messages":"157","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"158","messages":"159","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"160","messages":"161","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"162","messages":"163","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"164","messages":"165","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"166","messages":"167","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"168","messages":"169","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"170","messages":"171","errorCount":0,"warningCount":12,"fixableErrorCount":0,"fixableWarningCount":0,"source":"172","usedDeprecatedRules":"108"},{"filePath":"173","messages":"174","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"175","messages":"176","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"177","messages":"178","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"179","messages":"180","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"181","messages":"182","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"183","usedDeprecatedRules":"108"},{"filePath":"184","messages":"185","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"186","messages":"187","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"188","usedDeprecatedRules":"108"},{"filePath":"189","messages":"190","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"191","messages":"192","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"193","usedDeprecatedRules":"108"},{"filePath":"194","messages":"195","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"196","messages":"197","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"198","messages":"199","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"200","messages":"201","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"202","usedDeprecatedRules":"108"},{"filePath":"203","messages":"204","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"205","usedDeprecatedRules":"108"},{"filePath":"206","messages":"207","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"208","messages":"209","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"108"},{"filePath":"210","messages":"211","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"212","messages":"213","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"214","messages":"215","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"216","messages":"217","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\index.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\pages\\Activities.jsx",[],["218","219"],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\pages\\Dashboard.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\pages\\Register.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\pages\\Login.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\pages\\Weight.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\pages\\Sleep.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\pages\\Settings.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\static\\Landing page\\landingPage.jsx",["220"],"\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport ReactPlayer from 'react-player';\r\n\r\nimport \"./landingPage.css\";\r\n\r\nclass LandingPage extends React.Component {\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n      };\r\n  }\r\n  \r\n  render() {\r\n    \r\n    return (<div>\r\n          <div data-layer=\"c928f3c7-5250-4138-a83c-e25456bf8686\" className=\"landingPage\">        <div data-layer=\"5a6980cb-b6bf-4c62-aae8-fcb621d738fc\" className=\"background\"></div>\r\n        <div data-layer=\"d6ae205a-a0e8-4846-a627-9f79bdb5a0f8\" className=\"logoPng\"></div>\r\n        <div data-layer=\"5fe04d9c-2e45-40b5-9b1b-365638df499c\" className=\"beYourBest\">Be your best!</div>\r\n        <div data-layer=\"db4238ef-c62c-47fd-9ff0-8550d1e9e531\" className=\"home\"><a href=\"./home\">Home</a></div>\r\n        <div data-layer=\"86a65718-96bf-44f4-af17-77341978d82b\" className=\"signIn\"><a href=\"./app/login\">Sign in</a></div>\r\n        <div data-layer=\"f630dc31-7e1f-4466-8cf4-8b7fdfdc67df\" className=\"review\"><a href=\"./review\">Review</a></div>\r\n        <div data-layer=\"b8889e6b-4f00-4793-8372-cc9c30a98fde\" className=\"help\"><a href=\"./help\">Help</a></div>\r\n</div>\r\n\r\n<div className=\"video-wrapper\">\r\n<ReactPlayer url='Stock/intro.mp4' playing=\"true\" loop=\"true\" muted=\"true\" className=\"video\"/>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n    );\r\n  }\r\n}\r\n\r\nLandingPage.propTypes = {\r\n\r\n}\r\n\r\nLandingPage.defaultProps = {\r\n\r\n}\r\n\r\n\r\nexport default LandingPage;\r\n          ","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\static\\Review page\\review.jsx",["221"],"\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../Hyperlinks.css\";\r\n\r\nimport \"./review.css\";\r\n\r\nclass Review extends React.Component {\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n      };\r\n  }\r\n  \r\n  render() {\r\n    \r\n    return (\r\n          <div data-layer=\"bc3d6006-1c79-47bd-ade1-29747cdacd53\" className=\"review\">        <div data-layer=\"e5ab7f71-e921-459d-b1a5-ba5e8644c8eb\" className=\"background\"></div>\r\n        <div data-layer=\"b3f2c81e-efcd-466f-863b-aa585defe8d2\" className=\"logoPng\"></div>\r\n        <div data-layer=\"1b85dd37-d4e7-411a-969f-85ae48c84859\" className=\"beYourBest\">Be your best!</div>\r\n        <div data-layer=\"2fb56c17-bdf1-44ee-8225-49d7af9e0c84\" className=\"hereAtFitifyWeValueYourFeedbackToEnsureWeBringTheBestPossibleExperienceToYouWeWantYourJourneyOfGreatFitnessToBeAMemorableYetFulfillingOnetoEnsureThisWeWantToTakeAnyFormOfCritiqueYouMayHaveWeHaveProvided\">Here at Fitify, we value your feedback to ensure we bring the best possible experience to you. We want your journey of great fitness to be a memorable yet fulfilling one.<br /><br />To ensure this, we want to take any form of critique you may have. We have provided a review form for you to fill and to talk about any things you would want changing or to you may have encountered. If you have nothing but good things to say, then we are more than welcome to receive the warm compliments! Every review matters.</div>\r\n        <div data-layer=\"423bbcd8-2480-4bc7-a8cb-608fd89d4fba\" className=\"weValueYourFeedback\">We value your feedback</div>\r\n        <div data-layer=\"2ea0c00b-7554-4b46-acf7-eddbd917ca1f\" className=\"home\"><a id=\"orangelink\" href=\"./home\">Home</a></div>\r\n        <div data-layer=\"85c6a18e-e1d2-4032-9d77-498d44050bb5\" className=\"signIn\"><a id=\"orangelink\" href=\"./app/login\">Sign in</a></div>\r\n        <div data-layer=\"23716882-1ce6-421a-8809-93580baa5855\" className=\"review8bc95b58\"><a id=\"orangelink\" href=\"./review\">Review</a></div>\r\n        <div data-layer=\"cc4530bb-f8fa-44d7-92f9-0fe47cd40a0f\" className=\"help\"><a id=\"orangelink\" href=\"./help\">Help</a></div>\r\n        <svg data-layer=\"d68b603a-3faa-4bbc-9c80-daa1e321d4bc\" preserveAspectRatio=\"none\" viewBox=\"-2 -2 100 4\" className=\"line1\"><path d=\"M 0 0 L 96 0\"  /></svg>\r\n</div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nReview.propTypes = {\r\n\r\n}\r\n\r\nReview.defaultProps = {\r\n\r\n}\r\n\r\n\r\nexport default Review;\r\n          ","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\static\\Home page\\home.jsx",["222"],"\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../Hyperlinks.css\";\r\n\r\nimport \"./home.css\";\r\n\r\nclass About extends React.Component {\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n      };\r\n  }\r\n  \r\n  render() {\r\n    \r\n    return (\r\n          <div data-layer=\"d23c8daa-0d9f-4576-aef7-3c1b4d55ef79\" className=\"about\">        <div data-layer=\"498884de-4f2e-4a53-9958-39c5f9207f12\" className=\"background\"></div>\r\n        <div data-layer=\"9732dac0-89fb-4f51-b158-d9019b645015\" className=\"logoPng\"></div>\r\n        <div data-layer=\"cfc26b5e-f1cc-4364-9006-17e8c8e314ce\" className=\"beYourBest\">Be your best!</div>\r\n        <div data-layer=\"1d7fcc49-717d-419c-8316-992c70b84a4c\" className=\"set6\"></div>\r\n        <div data-layer=\"e0cf441c-dbb8-4fec-904e-81112091c703\" className=\"fitifyIsAWebBasedApplicationThatHelpsUsersManageAndKeepTrackOfTheirWeightOutUltimateGoalIsToHelpPeopleAroundTheWorldBeInTheBestShapeTheyPossiblyCanBeWithOurEasyToUseFeatures\">Fitify is a web-based application that helps users manage and keep track of their weight. Out ultimate goal is to help people around the world be in the best shape they possibly can be with our easy to use features!  </div>\r\n        <div data-layer=\"a40d870c-45b7-4c5b-ab75-287acdfa4fdc\" className=\"someOfTheAwesomeFeaturesThatAreIncludedWithFitifyRecordingWeightStepCountCalorieIntakewithManyMoreToComeInTheFuture\">Some of the awesome features that are included with Fitify:<br />- Recording weight<br />- Step count<br />- Calorie intake<br /><br />With many more to come in the future!</div>\r\n        <div data-layer=\"be6d139f-c1d0-4817-9516-890bb57590d6\" className=\"whatIsFitify\">What is Fitify?</div>\r\n        <div data-layer=\"22170fe6-97f9-4bb7-bffe-1f58f794bc33\" className=\"fitifyFeatures\">Fitify features</div>\r\n        <div data-layer=\"d4a54f64-b36c-4924-86bb-35b307f9e00b\" className=\"rectangle3\"></div>\r\n        <div data-layer=\"3076fe46-55db-4966-a672-7586fb3e2a83\" className=\"home\"><a id=\"orangelink\" href=\"./home\">Home</a></div>\r\n        <div data-layer=\"d8cc1c99-ab6c-4170-84be-b3b7fff63103\" className=\"signIn\"><a id=\"orangelink\" href=\"./app/login\">Sign in</a></div>\r\n        <div data-layer=\"7414b399-2602-41da-ae09-7fed3c4dac36\" className=\"review\"><a id=\"orangelink\" href=\"./review\">Review</a></div>\r\n        <div data-layer=\"d8549f2e-1f16-427e-9d68-d308cf847a3d\" className=\"help\"><a id=\"orangelink\" href=\"./help\">Help</a></div>\r\n        <svg data-layer=\"029d0d9f-7e37-488b-b955-28dc0cc8d36f\" preserveAspectRatio=\"none\" viewBox=\"-2 -2 83 4\" className=\"line1\"><path d=\"M 0 0 L 79 0\"  /></svg>\r\n        <div data-layer=\"32ef4f59-e13d-4613-a6b6-74c72ca48abd\" className=\"getFit\"><a href=\"./app/login\">Get Fit</a></div>\r\n</div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nAbout.propTypes = {\r\n\r\n}\r\n\r\nAbout.defaultProps = {\r\n\r\n}\r\n\r\n\r\nexport default About;\r\n          ","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\services\\login\\authentication.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\static\\Help page\\help.jsx",["223"],"\r\nimport React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport \"../Hyperlinks.css\";\r\n\r\nimport \"./help.css\";\r\n\r\nclass Help extends React.Component {\r\n\r\n  constructor(props) {\r\n      super(props);\r\n      this.state = {\r\n\r\n      };\r\n  }\r\n  \r\n  render() {\r\n    \r\n    return (\r\n          <div data-layer=\"12f02607-438d-4bc4-91e3-34c2e71a7727\" className=\"help\">        <div data-layer=\"c0f86720-745b-410b-b1cf-76dba0ed8e87\" className=\"background\"></div>\r\n        <div data-layer=\"d967fbb4-afcf-4d98-91b9-0d1f91d70838\" className=\"logoPng\"></div>\r\n        <div data-layer=\"56db0a31-de2a-4959-9098-01be16b0a291\" className=\"beYourBest\">Be your best!</div>\r\n        <div data-layer=\"8c825ac7-2f8f-4681-8f2f-664f7ebd6b2c\" className=\"ifYouAreExperiencingTechnicalDifficultiesWithOurServicesPleaseDontHesitateToContactUsWeWillBeMoreThanWillingToHelpYouOutAndToProvideTheBestCareToResolveYourProblem\">If you are experiencing technical difficulties with our services, please don't hesitate to contact us. We will be more than willing to help you out and to provide the best care to resolve your problem.</div>\r\n        <div data-layer=\"70d4739f-51e6-404d-8df6-386de20b70d5\" className=\"needAssistance\">Need Assistance?</div>\r\n        <div data-layer=\"aeea2b90-5ed2-45cd-9c7d-986c1f879e02\" className=\"feelFreeToContactUsAndWeWillRespondToYouAsSoonAsWeCan\">Feel free to contact us and we will respond to you as soon as we can. </div>\r\n        <div data-layer=\"52e56e73-f079-4810-a4cb-3051271f044f\" className=\"contactUs\">Contact us</div>\r\n        <div data-layer=\"98c9080d-e135-4e12-9b26-11a91d1510b7\" className=\"home\"><a id=\"orangelink\" href=\"./home\">Home</a></div>\r\n        <div data-layer=\"2b19e254-98fc-410d-9c0e-faabd82be01a\" className=\"signIn\"><a id=\"orangelink\" href=\"./app/login\">Sign in</a></div>\r\n        <div data-layer=\"4583eae8-9d18-41bb-b9e7-2cd3b0084f69\" className=\"review\"><a id=\"orangelink\" href=\"./review\">Review</a></div>\r\n        <div data-layer=\"12790a36-338a-456f-85bb-c927ed8255c7\" className=\"help9ace59d5\"><a id=\"orangelink\" href=\"./help\">Help</a></div>\r\n        <svg data-layer=\"b64251b2-c507-4e46-8d4c-d8316d25d824\" preserveAspectRatio=\"none\" viewBox=\"-2 -2 66 4\" className=\"line1\"><path d=\"M 0 0 L 62 0\"  /></svg>\r\n        <div data-layer=\"8e3f2aae-d406-44b5-ac03-69eae6d27445\" className=\"tech\"></div>\r\n</div>\r\n\r\n    );\r\n  }\r\n}\r\n\r\nHelp.propTypes = {\r\n\r\n}\r\n\r\nHelp.defaultProps = {\r\n\r\n}\r\n\r\n\r\nexport default Help;\r\n          ","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\register\\StepForm.js",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\Navbar.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\FirstTimeSetup.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\activities\\ActivitiesView.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\services\\settings\\ThemeSettings.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\constants\\constant.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\dashboard\\DashboardView.jsx",["224","225","226","227","228","229","230","231"],"//Import React library\r\nimport React from 'react';\r\n\r\n//Import Material-ui theming \r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//Import Material-ui preloader\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n//Import material-ui typography\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n//Import Material-ui layout\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\n\r\n//Import Material-ui Floating Button\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n      },\r\n    },\r\n  }));\r\n\r\nexport default function Dashboard(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <CssBaseline />\r\n      <Container fixed>\r\n          \r\n      </Container>\r\n    </div>\r\n  );\r\n}","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\sleep\\SleepView.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\weight\\WeightView.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\settings\\SettingsView.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\register\\Step2-Marketing.js",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\register\\Step1-UserInfo.js",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\register\\StepFinal-Information.js",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\register\\Step3-Notifications.js",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\register\\Step4-Appearance.js",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\register\\formValidation.js",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\weight\\actionButton\\weightInput.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\settings\\preferences\\SettingsPersonal.jsx",["232","233","234","235","236","237","238","239","240","241","242","243"],"//Import React library\r\nimport React from 'react';\r\n\r\n//Import Material-ui theming \r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n//Import Material-ui preloader\r\nimport Backdrop from '@material-ui/core/Backdrop';\r\nimport CircularProgress from '@material-ui/core/CircularProgress';\r\n\r\n//Import material-ui typography\r\nimport Typography from '@material-ui/core/Typography';\r\n\r\n//Import Material-ui layout\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport Container from '@material-ui/core/Container';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Grid from '@material-ui/core/Grid';\r\n\r\n//Import Material-ui Switches\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\n//Import Material-ui colour picker\r\nimport ColorPicker from 'material-ui-color-picker'\r\n\r\n//Import Material-ui forms\r\nimport FormGroup from '@material-ui/core/FormGroup';\r\nimport FormLabel from '@material-ui/core/FormLabel';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport Slider from '@material-ui/core/Slider';\r\nimport TextFormatIcon from '@material-ui/icons/TextFormat';\r\nimport FormatSizeIcon from '@material-ui/icons/FormatSize';\r\n\r\n//Import Settings\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      flexGrow: 1,\r\n      },\r\n    headingsText: {\r\n      padding: theme.spacing(3),\r\n      color: theme.palette.text.secondary,\r\n    },\r\n\r\n    headingsTextAlt: {\r\n      paddingTop: theme.spacing(6),\r\n      padding: theme.spacing(3),\r\n      color: theme.palette.text.secondary,\r\n    },\r\n\r\n    settingLabel: {\r\n      padding: theme.spacing(2),\r\n      textAlign: 'left',\r\n      color: theme.palette.text.secondary,\r\n    },\r\n\r\n    switch: {\r\n      marginTop: theme.spacing(-6),\r\n      marginRight: theme.spacing(3),\r\n      float: 'right'\r\n    }\r\n  }));\r\n\r\n  \r\n\r\nexport default function SettingsPersonal(props) {\r\n\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n    <Container fixed>\r\n          <Typography variant=\"h5\" component=\"h5\" className={classes.headingsText}>\r\n            Personal\r\n          </Typography>\r\n          <Paper>\r\n            <Grid container spacing={3}>\r\n              <Grid item xs={10} xl={11}>\r\n                <Typography className={classes.settingLabel}>\r\n                  Personal settings go here\r\n                </Typography>\r\n              </Grid>\r\n            </Grid>\r\n          </Paper>\r\n    </Container>\r\n    </div>\r\n  );\r\n}","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\settings\\preferences\\SettingsNotifications.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\settings\\preferences\\SettingsMarketing.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\settings\\preferences\\SettingsAppearance.jsx",["244","245"],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\weight\\visualisation\\WeightChart.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\weight\\visualisation\\WeightTable.jsx",["246"],"import React, {useState, useEffect} from \"react\";\r\n\r\n//Import DataGrid (table) and Grid toolbar (export features)\r\nimport { DataGrid, GridToolbar } from '@material-ui/data-grid';\r\n\r\n//Import Box for spacing\r\nimport Box from '@material-ui/core/Box';\r\n\r\n//Import WeightGet service\r\nimport WeightGet from '../../../services/activities/weightGet'\r\n\r\nexport default function RowsGrid() {\r\n\r\n    //State for table rows to be appended on\r\n    const [tableRows,setTableRow] = useState([]);\r\n  \r\n    //Define table columns for DataGrid\r\n    const tableColumns = [\r\n        { field: \"activityStart\", headerName: \"Date/Time\", description: 'The date/time of the weight measurement.', type: 'dateTime', flex: 0.9},\r\n        { field: \"moodRating\", headerName: \"Mood Rating\", description: 'Mood rating is out of 5, with 5 being the most motivated.', type: 'number', flex: 0.5},\r\n        { field: \"weight\", headerName: \"Weight (kg)\", description: 'Weight is measured in kilograms.', type: 'number', flex: 0.5},\r\n        { field: \"description\", headerName: \"Description\", description: 'Optional description entered by the user.', sortable: false, flex: 1},\r\n        ];\r\n\r\n    //Load table data before render\r\n    useEffect(() => {\r\n        WeightGet.getUserData().then(dataResponse => {\r\n            //Change ActivityID to id (required ID field for DataGrid)\r\n            var DataGridID = dataResponse.map(item => { return { ...item, id: item.activityID }; });\r\n\r\n            console.log(DataGridID)\r\n\r\n            //Update Row fields\r\n            setTableRow(DataGridID);\r\n          })\r\n        }, []);\r\n\r\n    return (\r\n        <div style={{ height: '50vh', width: '98%' }}>\r\n        <DataGrid\r\n            columns={tableColumns}\r\n            rows={tableRows}\r\n            components={{\r\n                Toolbar: GridToolbar,\r\n              }}\r\n            pageSize={7}\r\n            rowsPerPageOptions={[7, 14, 30, 365]}\r\n        />\r\n        </div>\r\n    );\r\n}","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\sleep\\visualisation\\SleepChart.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\sleep\\actionButton\\SleepInput.jsx",["247","248","249","250"],"import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport List from '@material-ui/core/List';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n//Import Material-ui Floating Button\r\nimport Fab from '@material-ui/core/Fab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\n//Material-Ui Pickers\r\nimport DateFnsUtils from '@date-io/date-fns';\r\nimport {\r\n  MuiPickersUtilsProvider,\r\n  KeyboardDatePicker,\r\n  KeyboardDateTimePicker,\r\n  KeyboardTimePicker\r\n} from '@material-ui/pickers';\r\n\r\n//Material-Ui Rating\r\nimport Rating from '@material-ui/lab/Rating';\r\nimport PropTypes from 'prop-types';\r\n\r\n//Material-Ui Rating Icons\r\nimport SentimentVeryDissatisfiedIcon from '@material-ui/icons/SentimentVeryDissatisfied';\r\nimport SentimentDissatisfiedIcon from '@material-ui/icons/SentimentDissatisfied';\r\nimport SentimentSatisfiedIcon from '@material-ui/icons/SentimentSatisfied';\r\nimport SentimentSatisfiedAltIcon from '@material-ui/icons/SentimentSatisfiedAltOutlined';\r\nimport SentimentVerySatisfiedIcon from '@material-ui/icons/SentimentVerySatisfied';\r\n\r\n//Material-Ui TextField\r\nimport InputAdornment from '@material-ui/core/InputAdornment';\r\nimport TextField from '@material-ui/core/TextField';\r\n\r\n//SleepService CRUD\r\nimport SleepStoreService from '../../../services/activities/sleepStore'\r\n\r\n//Include React Router history (5.1+ required) - mitigation from nested components\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  appBar: {\r\n    position: 'relative',\r\n  },\r\n  title: {\r\n    marginLeft: theme.spacing(2),\r\n    flex: 1,\r\n  },\r\n  extendedIcon: {\r\n    position: \"fixed\",\r\n    bottom: theme.spacing(10),\r\n    right: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst likertIcons = {\r\n  1: {\r\n    icon: <SentimentVeryDissatisfiedIcon />,\r\n    label: 'Very Dissatisfied',\r\n  },\r\n  2: {\r\n    icon: <SentimentDissatisfiedIcon />,\r\n    label: 'Dissatisfied',\r\n  },\r\n  3: {\r\n    icon: <SentimentSatisfiedIcon />,\r\n    label: 'Neutral',\r\n  },\r\n  4: {\r\n    icon: <SentimentSatisfiedAltIcon />,\r\n    label: 'Satisfied',\r\n  },\r\n  5: {\r\n    icon: <SentimentVerySatisfiedIcon />,\r\n    label: 'Very Satisfied',\r\n  },\r\n};\r\n\r\nfunction IconContainer(props) {\r\n  const { value, ...other } = props;\r\n  return <span {...other}>{likertIcons[value].icon}</span>;\r\n}\r\n\r\nIconContainer.propTypes = {\r\n  value: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function SleepInput() {\r\n  const classes = useStyles();\r\n  let history = useHistory();\r\n\r\n  const [open, setOpen] = React.useState(false);\r\n\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const handleClose = () => {\r\n    setOpen(false);\r\n    //Reset all states to default\r\n    setActivity({\r\n      moodRating: 0,\r\n      sleepDate: '',\r\n      sleepTime: '',\r\n      awakeTime: '',\r\n      invalidDate: false,\r\n      invalidSleep: false,\r\n      invalidAwake: false\r\n    });\r\n  };\r\n\r\n  // ------------------------- Activity States and handlers ------------------------- //\r\n\r\n  const [activity, setActivity] = React.useState({\r\n      moodRating: 0,\r\n      sleepDate: '',\r\n      sleepTime: '',\r\n      awakeTime: '',\r\n      invalidDate: false,\r\n      invalidSleep: false,\r\n      invalidAwake: false\r\n  });\r\n\r\n  const handleFormChange = (event) => {\r\n    setActivity({ ...activity, [event.target.name]: event.target.value });\r\n  };\r\n\r\n  //Custom method to handle Date object to be seen as a React SyntheticEvent by using the target object layout\r\n  const handleDateChange = (dateArg) => {\r\n    var dateEventObj = {\"target\": {\"name\": \"sleepDate\", \"value\": dateArg} }\r\n    handleFormChange(dateEventObj);\r\n  };\r\n\r\n  //Custom method to handle sleep time object to be seen as a React SyntheticEvent by using the target object layout\r\n  const handleSleepChange = (timeArg) => {\r\n    var sleepEventObj = {\"target\": {\"name\": \"sleepTime\", \"value\": timeArg} }\r\n    handleFormChange(sleepEventObj);\r\n  };\r\n\r\n  //Custom method to handle awake time object to be seen as a React SyntheticEvent by using the target object layout\r\n  const handleAwakeChange = (timeArg) => {\r\n    var awakeEventObj = {\"target\": {\"name\": \"awakeTime\", \"value\": timeArg} }\r\n    handleFormChange(awakeEventObj);\r\n  };\r\n\r\n  //Method to create Activity and Weight using the WeightService\r\n  const submitInput = () => {\r\n\r\n    //Debug display values requested\r\n    console.log('Activity States:', activity)\r\n\r\n    //Validation - (BASE CASE): Check if the weight and date is present\r\n    if((activity.sleepDate === '' || activity.sleepDate === null || activity.sleepDate === undefined || isNaN(activity.sleepDate)) || (activity.sleepTime === '' || activity.sleepTime === null || activity.sleepTime == undefined || isNaN(activity.sleepTime)) || (activity.awakeTime === '' || activity.awakeTime === null || activity.awakeTime === undefined || isNaN(activity.awakeTime))){\r\n\r\n      var invalidDate = false\r\n      var invalidSleep = false\r\n      var invalidAwake = false\r\n\r\n      //If the date has not been input, Display Date Error\r\n      if(activity.sleepDate === '' || activity.sleepDate === null || activity.sleepDate === undefined){\r\n        invalidDate = true\r\n      }else{\r\n        invalidDate = false\r\n      }\r\n\r\n      //If the sleep time is incorrect or has not been input, Display Sleep Error\r\n      //Note: Invalid Date is returned by the Time Picker if the time entered is incorrect\r\n      if(activity.sleepTime === '' || activity.sleepTime === null || activity.sleepTime === undefined || isNaN(activity.sleepTime)){\r\n        invalidSleep = true\r\n      }else{\r\n        invalidSleep = false\r\n      }\r\n\r\n      //If the awake time is incorrect or has not been input, Display Awake Error\r\n      //Note: Invalid Date is returned by the Time Picker if the time entered is incorrect\r\n      if(activity.awakeTime === '' || activity.awakeTime === null || activity.awakeTime === undefined || isNaN(activity.awakeTime)){\r\n        invalidAwake = true\r\n      }else{\r\n        invalidAwake = false\r\n      }\r\n\r\n      //Set react states\r\n      setActivity({ ...activity, \r\n        invalidDate: invalidDate,\r\n        invalidSleep: invalidSleep,\r\n        invalidAwake: invalidAwake\r\n       });\r\n\r\n    }else{\r\n      //Assign values to the spring fields accordingly (the fields that are unused)\r\n\r\n      //--- Start Date and Time ---//\r\n      //Merge Date object with the sleep date and the just the sleep time to a DateTime obj\r\n      var ActivityStartDateTime = new Date(activity.sleepDate.getFullYear(), activity.sleepDate.getMonth(), activity.sleepDate.getDay(), activity.sleepTime.getHours(), activity.sleepTime.getMinutes(), activity.sleepTime.getSeconds(), activity.sleepTime.getMilliseconds())\r\n\r\n      //Spring requires a format of HR:MIN:SEC for a Time object\r\n\r\n      //Get the TimeString elements of this Date object\r\n      var springFormatSleepTime = ActivityStartDateTime.toTimeString();\r\n      //Get the first element from this object (this one is the Date return of the HR:MIN:SEC format)\r\n      springFormatSleepTime = springFormatSleepTime.split(' ')[0];\r\n\r\n      //--- End Date and Time ---//\r\n      //Set the next day object with the sleep date and the awake time (the Date will be incremented after this step!!!)\r\n      var ActivityEndDateTime = new Date(activity.sleepDate.getFullYear(), activity.sleepDate.getMonth(), activity.sleepDate.getDay(), activity.awakeTime.getHours(), activity.awakeTime.getMinutes(), activity.awakeTime.getSeconds(), activity.awakeTime.getMilliseconds());\r\n\r\n      //The object with the next day set (using the SetDate to meet DST)\r\n      ActivityEndDateTime.setDate(ActivityEndDateTime.getDate() + 1);\r\n\r\n      //Spring requires a format of HR:MIN:SEC for a Time object\r\n\r\n      //Get the TimeString elements of this Date object\r\n      var springFormatAwakeTime = ActivityEndDateTime.toTimeString();\r\n      //Get the first element from this object (this one is the Date return of the HR:MIN:SEC format)\r\n      springFormatAwakeTime = springFormatAwakeTime.split(' ')[0];\r\n\r\n      //--- Sleeping Hours ---//\r\n      //Working out time difference between sleepTime and awakeTime in ms\r\n      var duration = activity.awakeTime.valueOf() - activity.sleepTime.valueOf();\r\n\r\n      //Now convert ms to hrs, ms -> secs (1000) -> mins (60) -> hrs (60) and then round to 2dp for easier data management, then using the unary + operator to make from string to double again!\r\n      var sleepingHrs = +(duration/1000/60/60).toFixed(2);\r\n\r\n      //Add 24 hours if the calculated duration is negative (it has reached one day)\r\n      if (sleepingHrs < 0) {\r\n        sleepingHrs = 24 + sleepingHrs;\r\n     }\r\n\r\n      //Create records in Activity and Weight\r\n      SleepStoreService.createRecord(\r\n        ActivityStartDateTime,\r\n        ActivityEndDateTime,\r\n        activity.moodRating,\r\n        0,\r\n        ActivityStartDateTime,\r\n        springFormatSleepTime,\r\n        springFormatAwakeTime,\r\n        sleepingHrs,\r\n      ).then(() => {\r\n        //Successful Creation\r\n        handleClose()\r\n        //Reload component by routing to a different component and back again\r\n        history.push('/app/dashboard');\r\n        history.push('/app/sleep');\r\n      }).catch((error) => {\r\n        //TODO: Error handling dialog,message,etc.\r\n      })\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <Fab color=\"primary\" aria-label=\"add\" className={classes.extendedIcon} onClick={handleClickOpen}>\r\n        <AddIcon />\r\n      </Fab>\r\n      <Dialog open={open} onClose={handleClose}>\r\n        <AppBar className={classes.appBar}>\r\n          <Toolbar>\r\n            <IconButton edge=\"start\" color=\"inherit\" onClick={handleClose} aria-label=\"close\">\r\n              <CloseIcon />\r\n            </IconButton>\r\n            <Typography variant=\"h6\" className={classes.title}>\r\n              Sleep Input\r\n            </Typography>\r\n            <Button autoFocus color=\"inherit\" onClick={submitInput}>\r\n              Add Sleep\r\n            </Button>\r\n          </Toolbar>\r\n        </AppBar>\r\n        <List>\r\n        <ListItem>\r\n        <ListItem>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardDatePicker\r\n                fullWidth\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                margin=\"normal\"\r\n                id=\"sleepDate\"\r\n                name=\"sleepDate\"\r\n                label=\"Sleep Date\"\r\n                format=\"dd/MM/yyyy\"\r\n                value={activity.sleepDate || null}\r\n                onChange={handleDateChange}\r\n                //required\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change date',\r\n                }}\r\n                error={activity.invalidDate}\r\n                helperText={activity.invalidDate && \"Date is required\"}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </ListItem>\r\n          <ListItem>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardTimePicker\r\n                fullWidth\r\n                InputLabelProps={{\r\n                  shrink: true\r\n                }}\r\n                margin=\"normal\"\r\n                id=\"sleepTime\"\r\n                name=\"sleepTime\"\r\n                label=\"Time when you slept\"\r\n                value={activity.sleepTime || null}\r\n                onChange={handleSleepChange}\r\n                //required\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change time',\r\n                }}\r\n                error={activity.invalidSleep}\r\n                helperText={activity.invalidSleep && \"Time is required\"}\r\n              />\r\n            </MuiPickersUtilsProvider>\r\n          </ListItem>\r\n          <ListItem>\r\n            <MuiPickersUtilsProvider utils={DateFnsUtils}>\r\n                <KeyboardTimePicker\r\n                fullWidth\r\n                InputLabelProps={{\r\n                    shrink: true\r\n                }}\r\n                margin=\"normal\"\r\n                id=\"awakeTime\"\r\n                name=\"awakeTime\"\r\n                label=\"Time of waking next day\"\r\n                value={activity.awakeTime || null}\r\n                onChange={handleAwakeChange}\r\n                //required\r\n                KeyboardButtonProps={{\r\n                    'aria-label': 'change time',\r\n                }}\r\n                error={activity.invalidAwake}\r\n                helperText={activity.invalidAwake && \"Time is required\"}\r\n                />\r\n            </MuiPickersUtilsProvider>\r\n            </ListItem>\r\n          </ListItem>\r\n          <Divider />\r\n          <ListItem>\r\n            <Typography component=\"legend\">How did you feel about this measurement?</Typography>\r\n            <Rating\r\n            name=\"moodRating\"\r\n            size=\"large\"\r\n            value={activity.moodRating || null}\r\n            defaultValue={2}\r\n            getLabelText={(value) => likertIcons[value].label}\r\n            IconContainerComponent={IconContainer}\r\n            onChange={handleFormChange}\r\n            />\r\n          </ListItem>\r\n        </List>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\sleep\\visualisation\\SleepTable.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\activities\\visualisation\\ActivitiesTable.jsx",["251"],"import React, {useState, useEffect} from \"react\";\r\n\r\n//Import DataGrid (table) and Grid toolbar (export features)\r\nimport { DataGrid, GridToolbar } from '@material-ui/data-grid';\r\n\r\n//Import Box for spacing\r\nimport Box from '@material-ui/core/Box';\r\n\r\n//Import WeightGet service\r\nimport ActivitiesGet from '../../../services/activities/activitiesGet'\r\n\r\nexport default function RowsGrid() {\r\n\r\n    //State for table rows to be appended on\r\n    const [tableRows,setTableRow] = useState([]);\r\n  \r\n    //Define table columns for DataGrid\r\n    const tableColumns = [\r\n        { field: \"activityStart\", headerName: \"Date/Time\", description: 'The date/time of the weight measurement.', type: 'dateTime', flex: 0.9},\r\n        { field: \"activityType\", headerName: \"Measurement\", description: 'The activity type entered into Fitify.', flex: 0.5},\r\n        { field: \"moodRating\", headerName: \"Mood Rating\", description: 'Mood rating is out of 5, with 5 being the most motivated.', type: 'number', flex: 0.5},\r\n        ];\r\n\r\n    //Load table data before render\r\n    useEffect(() => {\r\n        ActivitiesGet.getUserData().then(dataResponse => {\r\n            //Change ActivityID to id (required ID field for DataGrid)\r\n            var DataGridID = dataResponse.map(item => { return { ...item, id: item.activityID }; });\r\n\r\n            console.log(DataGridID)\r\n\r\n            //Update Row fields\r\n            setTableRow(DataGridID);\r\n          })\r\n        }, []);\r\n\r\n    return (\r\n        <div style={{ height: '90vh', width: '98%' }}>\r\n        <DataGrid\r\n            columns={tableColumns}\r\n            rows={tableRows}\r\n            components={{\r\n                Toolbar: GridToolbar,\r\n              }}\r\n            pageSize={14}\r\n            rowsPerPageOptions={[14, 30, 100, 365]}\r\n        />\r\n        </div>\r\n    );\r\n}","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\services\\register\\userCreation.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\services\\settings\\MarketingSettings.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\services\\activities\\weightGet.jsx",["252","253"],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\services\\activities\\activitiesGet.jsx",["254"],"//Import Axios library to proxy requests to Spring server\r\nimport axios from 'axios'\r\n\r\n//Setup constant for Spring Host - this will be changed in production *Include port but no endpoints!*\r\nimport { SpringHostURL } from '../../constants/constant'\r\n\r\nclass SleepGet {\r\n\r\n    //Method to get all sleep activities by the current user\r\n    async getUserActivity(){\r\n        //Get Activity Data\r\n        const activityDataRes = await this.getActivityData()\r\n\r\n        //Filter just results by this user\r\n        const userActivityRes = activityDataRes.filter(function(item){\r\n            return item.userID == sessionStorage.getItem('UserID');         \r\n        });\r\n\r\n        return userActivityRes\r\n    }\r\n\r\n    //Main Method to get User Data, merge filtered data and return this sleep data only by the user and only activities that are sleep measurements\r\n    async getUserData(){\r\n        //Get Activity User Response\r\n        const activityDataFilter = await this.getUserActivity()\r\n\r\n        return activityDataFilter\r\n    }\r\n\r\n    //Method to get activity data\r\n    async getActivityData(){\r\n        return axios.get(`${SpringHostURL}/api/activities`,{\r\n            headers: {\r\n                //Set the post content as application/json (Spring will not recognise text for this auth endpoint PostMapping)\r\n                'Content-Type': 'application/json;charset=UTF-8',\r\n                //Set Bearer Token JWT auth\r\n                'Authorization': `Bearer ${sessionStorage.getItem('token')}`\r\n            }\r\n        }).then(response => response.data)\r\n        //The post method was not successful and some error has occured\r\n\r\n        //To get error status, we can log it to the console using console.log(error.response.status)\r\n        //To get the error msg, we can log it to the console using console.log(error.response.data.error)\r\n    .catch(error => console.error(error))\r\n    }\r\n\r\n}\r\n\r\nexport default new SleepGet()","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\services\\activities\\sleepGet.jsx",["255","256"],"//Import Axios library to proxy requests to Spring server\r\nimport axios from 'axios'\r\n\r\n//Setup constant for Spring Host - this will be changed in production *Include port but no endpoints!*\r\nimport { SpringHostURL } from '../../constants/constant'\r\n\r\nclass SleepGet {\r\n\r\n    //Method to get all sleep activities by the current user\r\n    async getUserActivity(){\r\n        //Get Activity Data\r\n        const activityDataRes = await this.getActivityData()\r\n\r\n        //Filter just results by this user\r\n        const userActivityRes = activityDataRes.filter(function(item){\r\n            return item.userID == sessionStorage.getItem('UserID');         \r\n        });\r\n\r\n        //Finally, filter results by sleep measurements\r\n        const userActivitySleep = userActivityRes.filter(function(item){\r\n            return item.activityType == 'sleep'        \r\n        });\r\n\r\n        return userActivitySleep\r\n    }\r\n\r\n    //Method to get all sleep measurements by the current user\r\n    async getUserSleep(userActivitySleep){\r\n        //Get filtered data from the user that only contains sleep measurements\r\n        const sleepDataRes = await this.getSleepData()\r\n\r\n        //Filter out just the activityID's from SleepData\r\n        var userActivities = userActivitySleep.map(a => a.activityID);\r\n\r\n        //Filter just results from the filtered UserID and SleepData from previous filter\r\n        const filteredSleeps = sleepDataRes.filter(item => userActivities.includes(item.activityID));\r\n\r\n        //Merge the userActivity object with the userSleep object using the arrays.map function\r\n        const mergedResponses = userActivitySleep.map(activityMapping => ({...activityMapping, ...filteredSleeps.find(sleepMapping => sleepMapping.activityID === activityMapping.activityID)}))\r\n\r\n        return mergedResponses\r\n    }\r\n\r\n    //Main Method to get User Data, merge filtered data and return this sleep data only by the user and only activities that are sleep measurements\r\n    async getUserData(){\r\n        //Get Activity User Response\r\n        const activityDataFilter = await this.getUserActivity()\r\n\r\n        //Get those activity Sleep data now\r\n        const sleepDataFilterMerge = await this.getUserSleep(activityDataFilter)\r\n\r\n        return sleepDataFilterMerge\r\n    }\r\n\r\n    //Method to get activity data\r\n    async getActivityData(){\r\n        return axios.get(`${SpringHostURL}/api/activities`,{\r\n            headers: {\r\n                //Set the post content as application/json (Spring will not recognise text for this auth endpoint PostMapping)\r\n                'Content-Type': 'application/json;charset=UTF-8',\r\n                //Set Bearer Token JWT auth\r\n                'Authorization': `Bearer ${sessionStorage.getItem('token')}`\r\n            }\r\n        }).then(response => response.data)\r\n        //The post method was not successful and some error has occured\r\n\r\n        //To get error status, we can log it to the console using console.log(error.response.status)\r\n        //To get the error msg, we can log it to the console using console.log(error.response.data.error)\r\n    .catch(error => console.error(error))\r\n    }\r\n\r\n    //Method to get activity sleep data\r\n    async getSleepData(){\r\n        return axios.get(`${SpringHostURL}/api/activities/sleep`,{\r\n            headers: {\r\n                //Set the post content as application/json (Spring will not recognise text for this auth endpoint PostMapping)\r\n                'Content-Type': 'application/json;charset=UTF-8',\r\n                //Set Bearer Token JWT auth\r\n                'Authorization': `Bearer ${sessionStorage.getItem('token')}`\r\n            }\r\n        }).then(response => response.data)\r\n        //The post method was not successful and some error has occured\r\n\r\n        //To get error status, we can log it to the console using console.log(error.response.status)\r\n        //To get the error msg, we can log it to the console using console.log(error.response.data.error)\r\n    .catch(error => console.error(error))\r\n    }\r\n\r\n}\r\n\r\nexport default new SleepGet()","D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\services\\activities\\sleepStore.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\services\\activities\\weightStore.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\pages\\WaterIntake.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\components\\water\\WaterIntakeView.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\services\\activities\\waterIntakeGet.jsx",[],"D:\\Filip\\GitHub\\cs2001-2020_21-group7\\src\\frontend-react\\src\\services\\activities\\waterIntakeStore.jsx",[],{"ruleId":"257","replacedBy":"258"},{"ruleId":"259","replacedBy":"260"},{"ruleId":"261","severity":1,"message":"262","line":3,"column":8,"nodeType":"263","messageId":"264","endLine":3,"endColumn":17},{"ruleId":"261","severity":1,"message":"262","line":3,"column":8,"nodeType":"263","messageId":"264","endLine":3,"endColumn":17},{"ruleId":"261","severity":1,"message":"262","line":3,"column":8,"nodeType":"263","messageId":"264","endLine":3,"endColumn":17},{"ruleId":"261","severity":1,"message":"262","line":3,"column":8,"nodeType":"263","messageId":"264","endLine":3,"endColumn":17},{"ruleId":"261","severity":1,"message":"265","line":8,"column":8,"nodeType":"263","messageId":"264","endLine":8,"endColumn":16},{"ruleId":"261","severity":1,"message":"266","line":9,"column":8,"nodeType":"263","messageId":"264","endLine":9,"endColumn":24},{"ruleId":"261","severity":1,"message":"267","line":12,"column":8,"nodeType":"263","messageId":"264","endLine":12,"endColumn":18},{"ruleId":"261","severity":1,"message":"268","line":16,"column":8,"nodeType":"263","messageId":"264","endLine":16,"endColumn":13},{"ruleId":"261","severity":1,"message":"269","line":17,"column":8,"nodeType":"263","messageId":"264","endLine":17,"endColumn":12},{"ruleId":"261","severity":1,"message":"270","line":18,"column":8,"nodeType":"263","messageId":"264","endLine":18,"endColumn":11},{"ruleId":"261","severity":1,"message":"271","line":21,"column":8,"nodeType":"263","messageId":"264","endLine":21,"endColumn":11},{"ruleId":"261","severity":1,"message":"272","line":22,"column":8,"nodeType":"263","messageId":"264","endLine":22,"endColumn":15},{"ruleId":"261","severity":1,"message":"265","line":8,"column":8,"nodeType":"263","messageId":"264","endLine":8,"endColumn":16},{"ruleId":"261","severity":1,"message":"266","line":9,"column":8,"nodeType":"263","messageId":"264","endLine":9,"endColumn":24},{"ruleId":"261","severity":1,"message":"273","line":15,"column":8,"nodeType":"263","messageId":"264","endLine":15,"endColumn":19},{"ruleId":"261","severity":1,"message":"274","line":21,"column":8,"nodeType":"263","messageId":"264","endLine":21,"endColumn":14},{"ruleId":"261","severity":1,"message":"275","line":24,"column":8,"nodeType":"263","messageId":"264","endLine":24,"endColumn":19},{"ruleId":"261","severity":1,"message":"276","line":27,"column":8,"nodeType":"263","messageId":"264","endLine":27,"endColumn":17},{"ruleId":"261","severity":1,"message":"277","line":28,"column":8,"nodeType":"263","messageId":"264","endLine":28,"endColumn":17},{"ruleId":"261","severity":1,"message":"278","line":29,"column":8,"nodeType":"263","messageId":"264","endLine":29,"endColumn":24},{"ruleId":"261","severity":1,"message":"279","line":30,"column":8,"nodeType":"263","messageId":"264","endLine":30,"endColumn":16},{"ruleId":"261","severity":1,"message":"280","line":31,"column":8,"nodeType":"263","messageId":"264","endLine":31,"endColumn":14},{"ruleId":"261","severity":1,"message":"281","line":32,"column":8,"nodeType":"263","messageId":"264","endLine":32,"endColumn":22},{"ruleId":"261","severity":1,"message":"282","line":33,"column":8,"nodeType":"263","messageId":"264","endLine":33,"endColumn":22},{"ruleId":"261","severity":1,"message":"283","line":2,"column":16,"nodeType":"263","messageId":"264","endLine":2,"endColumn":24},{"ruleId":"261","severity":1,"message":"284","line":26,"column":8,"nodeType":"263","messageId":"264","endLine":26,"endColumn":25},{"ruleId":"261","severity":1,"message":"270","line":7,"column":8,"nodeType":"263","messageId":"264","endLine":7,"endColumn":11},{"ruleId":"261","severity":1,"message":"285","line":23,"column":3,"nodeType":"263","messageId":"264","endLine":23,"endColumn":25},{"ruleId":"261","severity":1,"message":"286","line":39,"column":8,"nodeType":"263","messageId":"264","endLine":39,"endColumn":22},{"ruleId":"261","severity":1,"message":"287","line":40,"column":8,"nodeType":"263","messageId":"264","endLine":40,"endColumn":17},{"ruleId":"288","severity":1,"message":"289","line":161,"column":215,"nodeType":"290","messageId":"291","endLine":161,"endColumn":217},{"ruleId":"261","severity":1,"message":"270","line":7,"column":8,"nodeType":"263","messageId":"264","endLine":7,"endColumn":11},{"ruleId":"288","severity":1,"message":"289","line":16,"column":32,"nodeType":"290","messageId":"291","endLine":16,"endColumn":34},{"ruleId":"288","severity":1,"message":"289","line":21,"column":38,"nodeType":"290","messageId":"291","endLine":21,"endColumn":40},{"ruleId":"288","severity":1,"message":"289","line":16,"column":32,"nodeType":"290","messageId":"291","endLine":16,"endColumn":34},{"ruleId":"288","severity":1,"message":"289","line":16,"column":32,"nodeType":"290","messageId":"291","endLine":16,"endColumn":34},{"ruleId":"288","severity":1,"message":"289","line":21,"column":38,"nodeType":"290","messageId":"291","endLine":21,"endColumn":40},"no-native-reassign",["292"],"no-negated-in-lhs",["293"],"no-unused-vars","'PropTypes' is defined but never used.","Identifier","unusedVar","'Backdrop' is defined but never used.","'CircularProgress' is defined but never used.","'Typography' is defined but never used.","'Paper' is defined but never used.","'Grid' is defined but never used.","'Box' is defined but never used.","'Fab' is defined but never used.","'AddIcon' is defined but never used.","'CssBaseline' is defined but never used.","'Switch' is defined but never used.","'ColorPicker' is defined but never used.","'FormGroup' is defined but never used.","'FormLabel' is defined but never used.","'FormControlLabel' is defined but never used.","'Checkbox' is defined but never used.","'Slider' is defined but never used.","'TextFormatIcon' is defined but never used.","'FormatSizeIcon' is defined but never used.","'useState' is defined but never used.","'MarketingSettings' is defined but never used.","'KeyboardDateTimePicker' is defined but never used.","'InputAdornment' is defined but never used.","'TextField' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-global-assign","no-unsafe-negation"]